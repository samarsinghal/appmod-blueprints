apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bedrock-kb-mcp-ingress
  namespace: ${{values.namespace}}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-url: "https://${{values.keycloakUrl}}/realms/${{values.keycloakRealm}}/protocol/openid-connect/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://${{values.keycloakUrl}}/realms/${{values.keycloakRealm}}/protocol/openid-connect/auth?client_id=${{values.keycloakClientId}}&response_type=code&redirect_uri=https://$request_host$request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "Authorization"
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bedrock-kb-mcp-service
            port:
              number: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bedrock-kb-mcp-oauth2-proxy
  namespace: ${{values.namespace}}
data:
  oauth2-proxy.cfg: |
    provider = "keycloak"
    client_id = "${{values.keycloakClientId}}"
    client_secret = "${{values.keycloakClientSecret}}"
    redirect_url = "https://bedrock-kb-mcp.${{values.namespace}}.svc.cluster.local/oauth2/callback"
    oidc_issuer_url = "https://${{values.keycloakUrl}}/realms/${{values.keycloakRealm}}"
    email_domains = "*"
    cookie_secure = true
    cookie_secret = "$(openssl rand -base64 32)"
    upstreams = ["http://bedrock-kb-mcp-service:8080"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bedrock-kb-mcp-oauth2-proxy
  namespace: ${{values.namespace}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bedrock-kb-mcp-oauth2-proxy
  template:
    metadata:
      labels:
        app: bedrock-kb-mcp-oauth2-proxy
    spec:
      containers:
      - name: oauth2-proxy
        image: quay.io/oauth2-proxy/oauth2-proxy:latest
        args:
        - --config=/etc/oauth2-proxy/oauth2-proxy.cfg
        ports:
        - containerPort: 4180
          name: http
        volumeMounts:
        - name: config
          mountPath: /etc/oauth2-proxy
      volumes:
      - name: config
        configMap:
          name: bedrock-kb-mcp-oauth2-proxy
---
apiVersion: v1
kind: Service
metadata:
  name: bedrock-kb-mcp-oauth2-proxy
  namespace: ${{values.namespace}}
spec:
  selector:
    app: bedrock-kb-mcp-oauth2-proxy
  ports:
  - name: http
    port: 4180
    targetPort: 4180
  type: ClusterIP